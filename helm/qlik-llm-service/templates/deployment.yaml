apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-service
  labels:
    app: {{ .Release.Name }}-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-service
    spec:
      volumes:
      - name: model-volume
        hostPath:
          path: {{ .Values.volumes.modelVolume.path }}
      containers:
      - name: {{ .Release.Name }}-service
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        volumeMounts:
        - name: model-volume
          mountPath: /app/model
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 3
          timeoutSeconds: 30